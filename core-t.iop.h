/***** THIS FILE IS AUTOGENERATED DO NOT MODIFY DIRECTLY ! *****/
#ifndef IOP_HEADER_GUARD_core_TYPES_H
#define IOP_HEADER_GUARD_core_TYPES_H

#include <lib-common/iop.h>

typedef enum core__log_level__t {
    LOG_LEVEL_EMERG,
    LOG_LEVEL_ALERT,
    LOG_LEVEL_CRIT,
    LOG_LEVEL_ERR,
    LOG_LEVEL_WARNING,
    LOG_LEVEL_NOTICE,
    LOG_LEVEL_INFO,
    LOG_LEVEL_DEBUG,
} core__log_level__t;
extern iop_enum_t const core__log_level__e;
IOP_ENUM(core__log_level);

#define LOG_LEVEL_count 8
#define LOG_LEVEL_min   0
#define LOG_LEVEL_max   7

typedef struct core__httpd_cfg__t {
    uint32_t outbuf_max_size;
    uint16_t pipeline_depth;
    uint32_t noact_delay;
    uint32_t max_queries;
    uint32_t max_conns_in;
    uint32_t on_data_threshold;
    uint32_t header_line_max;
    uint32_t header_size_max;
} core__httpd_cfg__t;
extern iop_struct_t const core__httpd_cfg__s;
IOP_GENERIC(core__httpd_cfg);

typedef struct core__httpc_cfg__t {
    uint16_t pipeline_depth;
    uint32_t noact_delay;
    uint32_t max_queries;
    uint32_t on_data_threshold;
    uint32_t header_line_max;
    uint32_t header_size_max;
} core__httpc_cfg__t;
extern iop_struct_t const core__httpc_cfg__s;
IOP_GENERIC(core__httpc_cfg);

#endif
