#!/bin/bash -e
##########################################################################
#                                                                        #
#  Copyright (C) 2004-2012 INTERSEC SAS                                  #
#                                                                        #
#  Should you receive a copy of this source code, you must check you     #
#  have a proper, written authorization of INTERSEC to hold it. If you   #
#  don't have such an authorization, you must DELETE all source code     #
#  files in your possession, and inform INTERSEC of the fact you obtain  #
#  these files. Should you not comply to these terms, you can be         #
#  prosecuted in the extent permitted by applicable law.                 #
#                                                                        #
##########################################################################

. Build/configure.inc.sh

# {{{ tools

IOPC_VER=2.3.1
if ! prereq "$IOPC_VER" "$(iopc --version)"; then
    warn "iopc version $IOPC_VER required (update your tools.git + make -C ~/dev/tools/iopc install)"
fi
setenv "IOPC" "$(which iopc)"

# }}}
# {{{ pkg-config packages

pkg_config_setvar "sqlite"  "libsqlite3-dev" "sqlite3"
pkg_config_setvar "imlib2"  "libimlib2-dev" "imlib2"
pkg_config_setvar "pcre"    "libpcre3-dev"  "libpcre"

# }}}
# {{{ libv8-dev

setvar "v8_LIBS"    "$(dirname "$0")/js/v8/libv8.a"

# }}}
# {{{ libreadline-dev

if test -r /usr/lib/libreadline.so -o /usr/lib64/libreadline.so; then
    setvar "readline_CFLAGS"
    setvar "readline_LIBS" "-lreadline"
else
    warn "missing libreadline, apt-get install libreadline-dev"
fi

# }}}
# {{{ libsctp-dev

test -r /usr/include/netinet/sctp.h || warn "missing libsctp, apt-get install libsctp-dev"

# }}}
# {{{ JNI

if test -z ${JAVA_HOME}; then
    JAVA_HOME=$(ls -1 -d /usr/lib/jvm/java*sun*/include 2>/dev/null | head -1)
    JAVA_HOME=${JAVA_HOME%/*}
fi
if test -z ${JAVA_HOME}; then
    JAVA_HOME=$(ls -1 -d /usr/lib/jvm/java*/include 2>/dev/null | head -1)
    JAVA_HOME=${JAVA_HOME%/*}
fi
if test -z ${JAVA_HOME}; then
    JAVA_HOME=$(ls -1 -d /usr/java/*/include 2>/dev/null | head -1)
    JAVA_HOME=${JAVA_HOME%/*}
fi
if test -z ${JAVA_HOME}; then
    log "JAVA_HOME not set, JNI disabled"
else
    setenv "WITH_JNI" "1"
    setvar "jni_CFLAGS" "-I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux"
    if test -d ${JAVA_HOME}/jre/lib/i386/server; then
        # -ljsig to use signal chaining of the JVM
        setvar "jvm_LDFLAGS" "-L${JAVA_HOME}/jre/lib/i386/server -Wl,--rpath=${JAVA_HOME}/jre/lib/i386/server:/usr/java/default/lib/i386i/server -ljvm -ljsig"
    elif test -d ${JAVA_HOME}/jre/lib/amd64/server; then
        setvar "jvm_LDFLAGS" "-L${JAVA_HOME}/jre/lib/amd64/server -Wl,--rpath=${JAVA_HOME}/jre/lib/amd64/server:/usr/java/default/lib/amd64/server -ljvm -ljsig"
    else
         warn "missing libjvm, apt-get install sun-java6-bin"
    fi
fi

# }}}
# {{{ Kit Marchand SFR

KITMARCHAND="$("$(dirname "$0")/mcg/modules/gwk/kitmarchand.sh" find)" \
&& setenv "KITMARCHAND" "$KITMARCHAND" \
|| log "kit SIMPA SFR not found"

# }}}
# {{{ CCN SDK

ccn0="/home/data/build/ccn"
ccn1="/opt/ccn"
ccn2="/srv/build/ccn"
ccn3="$(dirname "$0")/mcg/modules/charging/ccn"

if file_exists "$ccn0"; then
    setenv "ENABLE_CCN" "1"
    setenv "WITH_CCN" "1"
    setenv "CCN_PATH" "$ccn0"
elif file_exists "$ccn1"; then
    setenv "ENABLE_CCN" "1"
    setenv "WITH_CCN" "1"
    setenv "CCN_PATH" "$ccn1"
elif file_exists "$ccn2"; then
    setenv "ENABLE_CCN" "1"
    setenv "WITH_CCN" "1"
    setenv "CCN_PATH" "$ccn2"
elif file_exists "$ccn3"; then
    setenv "ENABLE_CCN" "1"
    setenv "WITH_CCN" "1"
    setenv "CCN_PATH" "$ccn3"
else
    setenv "ENABLE_CCN" "0"
    log "CCN SDK not found"
fi

# }}}
# {{{ php

if test -z "${PHP_VERSION}"; then
    case "$profile" in
        solaris*)
        PHP_CONFIG=/usr/local/php/bin/php-config
        ;;
        *)
        if which php-config >/dev/null 2>/dev/null; then
            PHP_CONFIG=php-config
        else
            warn "php-config is missing, apt-get install php5-dev"
        fi
        ;;
    esac
else
    if file_exists /opt/php-${PHP_VERSION}/bin/php-config; then
       PHP_CONFIG=/opt/php-${PHP_VERSION}/bin/php-config
    else
	PHP_CONFIG=/srv/build/php-${PHP_VERSION}/bin/php-config
    fi
fi
if test -n "$PHP_CONFIG"; then
    setvar "php5_CFLAGS" "$("$PHP_CONFIG" --includes)"
fi

# }}}
# {{{ mysql

if which mysql_config 1>/dev/null 2>/dev/null; then
    setvar "mysqlclient_CFLAGS" "$(mysql_config --include)"
    setvar "mysqlclient_LIBS"   "$(mysql_config --libs | sed -e 's/-rdynamic//g')"
else
    warn "libmysqlclient-dev is missing, apt-get install libmysqlclient-dev"
fi

# }}}
# {{{ geos

if which geos-config 1>/dev/null 2>/dev/null; then
    setvar "geos_CFLAGS" "$(geos-config --cflags)"
    if geos-config --clibs >/dev/null 2>/dev/null; then
        setvar "geos_LIBS"   "$(geos-config --clibs)"
    else
        setvar "geos_LIBS"   "$(geos-config --libs|sed -e 's/-lgeos/-lgeos_c/g')"
    fi
else
    warn "libgeos-dev is missing, apt-get install libgeos-dev"
fi

ruby_hdrdir="$(ruby_var rubyhdrdir topdir)"
ruby_arch="$(ruby_var arch)"
if [ -f "$ruby_hdrdir/ruby.h" ] && [ -d "$ruby_hdrdir/$ruby_arch" ]; then
    # Ruby >= 1.9
    setvar "ruby_CFLAGS" "-I$ruby_hdrdir -I$ruby_hdrdir/$ruby_arch -Wno-strict-prototypes -Wno-redundant-decls -DRUBY_19"
    setvar "ruby_LIBS" "$(ruby_var SOLIBS)"
elif [ -f "$ruby_hdrdir/ruby.h" ]; then
    # Ruby >= 1.8
    setvar "ruby_CFLAGS" "-I$ruby_hdrdir -Wno-strict-prototypes -Wno-redundant-decls -DRUBY_18"
    setvar "ruby_LIBS" "$(ruby_var SOLIBS)"
else
    warn "ruby headers are missing, apt-get install ruby-dev"
fi

read_py2ver() {
    pyver="$(python -V 2>&1)"
    pyver="${pyver#Python }"
    pyver_major="${pyver:0:1}"
    pyver_minor="${pyver:2:1}"
}

python2_bin="python"
read_py2ver

case "$pyver_major" in
    "2")
        python2_bin="python"
        python3_bin="python3"
        ;;
    "3")
        python2_bin="python2"
        python3_bin="python"
        read_py2ver
        ;;
esac

# check that python2 is at least a 2.6
if [ -n "$pyver_minor" ] && [ "$pyver_minor" -lt 6 ]; then
    if which python2.7-config &> /dev/null; then
        python2_bin="python2.7"
    elif which python2.6-config &> /dev/null; then
        python2_bin="python2.6"
    else
        warn "python >= 2.6 headers are missing, apt-get install python-dev"
    fi
fi

if which "${python2_bin}-config" &> /dev/null; then
    python2_ENABLE=1
    setenv python2_ENABLE  1
    setenv python2_CFLAGS  "$(${python2_bin}-config --cflags)"
    setenv python2_LIBS    "$(${python2_bin}-config --ldflags)"
fi

if which "${python3_bin}-config" &> /dev/null; then
    python3_ENABLE=1
    setenv python3_ENABLE  1
    setenv python3_CFLAGS  "$(${python3_bin}-config --cflags)"
    setenv python3_LIBS    "$(${python3_bin}-config --ldflags)"
    setenv python3_SUFFIX  "$(${python3_bin}-config --extension-suffix)"
fi

if [ -z "${python2_ENABLE}" ] && [ -z "${python3_ENABLE}" ]; then
    warn "python headers are missing, apt-get install python-dev"
fi


# }}}
#{{{ xmlsec

# call pkg-config directly rather than pkg_config_setvar to workaround stupid
# upstream bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=604828

if pkg-config --print-errors xmlsec1; then
    setvar "xmlsec_CFLAGS" "$(pkg-config --cflags xmlsec1 | tr -s '\\')"
    setvar "xmlsec_LIBS"   "$(pkg-config --libs xmlsec1)"
else
    warn "libxmlsec1-dev is missing (apt-get install libxmlsec1-dev)"
fi

# }}}
#{{{ ncurses

if pkg-config ncurses; then
    setvar "ncurses_CFLAGS" "$(pkg-config --cflags ncurses)"
    setvar "ncurses_LIBS"   "$(pkg-config --libs ncurses)"
else
    if [ -r /usr/include/ncurses.h ] && [ -r /usr/include/menu.h ]; then
        setvar "ncurses_CFLAGS" " "
    else
        warn "ncurses headers are missing (apt-get install libncurses5-dev)"
    fi

    #libmenu might be used optionally
    if [ -r /usr/lib/libncurses.so ] && [ -r /usr/lib/libmenu.so ]; then
        setvar "ncurses_LIBS" "-lncurses"
    else
        warn "libncurses.so is missing (apt-get install libncurses5-dev)"
    fi
fi

# }}}

test -z "$missing_dep" || die "Missing dependencies, please upgrade your system"
