/**************************************************************************/
/*                                                                        */
/*  Copyright (C) 2004-2012 INTERSEC SAS                                  */
/*                                                                        */
/*  Should you receive a copy of this source code, you must check you     */
/*  have a proper, written authorization of INTERSEC to hold it. If you   */
/*  don't have such an authorization, you must DELETE all source code     */
/*  files in your possession, and inform INTERSEC of the fact you obtain  */
/*  these files. Should you not comply to these terms, you can be         */
/*  prosecuted in the extent permitted by applicable law.                 */
/*                                                                        */
/**************************************************************************/

package core;

enum LogLevel {
    EMERG   = 0, /* system is unusable */
    ALERT   = 1, /* action must be taken immediately */
    CRIT    = 2, /* critical conditions */
    ERR     = 3, /* error conditions */
    WARNING = 4, /* warning conditions */
    NOTICE  = 5, /* normal but significant condition */
    INFO    = 6, /* informational */
    DEBUG   = 7, /* debug-level messages */
};

struct HttpdCfg {
    /** Maximum size of the output buffer (in octets) */
    uint    outbufMaxSize    = 32 << 20;
    /** Maximum number of pending incoming queries */
    ushort  pipelineDepth    = 32;
    /** Maximum time of inactivity before connection closing (in ms) */
    uint    noactDelay       = 30 * 1000;
    /** Maximum number of incoming queries handled into a connection life */
    uint    maxQueries       = 1024;
    /** Maximum number of inbound connections */
    uint    maxConnsIn       = 1000;
    /** Amount of data buffered by the body parser before flushing */
    uint    onDataThreshold  = 16 << 10;
    /** Maximum line length in headers */
    uint    headerLineMax    = 1024;
    /** Maximum total size for headers */
    uint    headerSizeMax    = 64 << 10;
};

struct HttpcCfg {
    /** Maximum number of pending outgoing queries */
    ushort  pipelineDepth    = 32;
    /** Maximum time of inactivity before connection closing (in ms) */
    uint    noactDelay       = 30 * 1000;
    /** Maximum number of outgoing queries handled into a connection life */
    uint    maxQueries       = 1024;
    /** Amount of data buffered by the body parser before flushing */
    uint    onDataThreshold  = 16 << 10;
    /** Maximum line length in headers */
    uint    headerLineMax    = 1024;
    /** Maximum total size for headers */
    uint    headerSizeMax    = 64 << 10;
};

enum IopHttpMethod {
    /* rfc 2616: ยง5.1.1: Method */
    /* XXX be careful, this struct is correlated with http_method_t
    in http.h */
    OPTIONS = 0,
    GET     = 1,
    HEAD    = 2,
    POST    = 3,
    PUT     = 4,
    DELETE  = 5,
    TRACE   = 6,
    CONNECT = 7,
};
