/***** THIS FILE IS AUTOGENERATED DO NOT MODIFY DIRECTLY ! *****/
#ifndef IOP_HEADER_GUARD_iop_TYPES_H
#define IOP_HEADER_GUARD_iop_TYPES_H

#include "iop-tdef.iop.h"

#if __has_feature(nullability)
#pragma GCC diagnostic push
#pragma GCC diagnostic error "-Wnullability-completeness"
#endif

EXPORT iop_enum_t const iop__int_size__e;
EXPORT iop_enum_t const * const nonnull iop__int_size__ep;

EXPORT iop_enum_t const iop__string_type__e;
EXPORT iop_enum_t const * const nonnull iop__string_type__ep;

struct iop__int_type__t {
    bool     is_signed;
    iop__int_size__t size;
};
EXPORT iop_struct_t const iop__int_type__s;
EXPORT iop_struct_t const * const nonnull iop__int_type__sp;
/*----- XXX private data, do not use directly -{{{-*/
typedef enum iop__iop_type__tag_t {
    iop__iop_type__i__ft = 1,
    iop__iop_type__b__ft = 2,
#define iop__iop_type__b__empty_ft  iop__iop_type__b__ft
    iop__iop_type__d__ft = 3,
#define iop__iop_type__d__empty_ft  iop__iop_type__d__ft
    iop__iop_type__s__ft = 4,
    iop__iop_type__v__ft = 5,
#define iop__iop_type__v__empty_ft  iop__iop_type__v__ft
    iop__iop_type__type_name__ft = 6,
    iop__iop_type__array__ft = 7,
} iop__iop_type__tag_t;
typedef iop__iop_type__tag_t iop__type__tag_t;
#define iop__type__i__ft iop__iop_type__i__ft
#define iop__type__b__ft iop__iop_type__b__ft
#define iop__type__b__empty_ft  iop__type__b__ft
#define iop__type__d__ft iop__iop_type__d__ft
#define iop__type__d__empty_ft  iop__type__d__ft
#define iop__type__s__ft iop__iop_type__s__ft
#define iop__type__v__ft iop__iop_type__v__ft
#define iop__type__v__empty_ft  iop__type__v__ft
#define iop__type__type_name__ft iop__iop_type__type_name__ft
#define iop__type__array__ft iop__iop_type__array__ft
/*-}}}-*/
struct iop__iop_type__t {
    iop__iop_type__tag_t iop_tag;
    union {
        struct iop__int_type__t i;
        iop__string_type__t s;
        lstr_t   type_name;
        struct iop__iop_type__t *nonnull array;
    };
};
EXPORT iop_struct_t const iop__iop_type__s;
EXPORT iop_struct_t const * const nonnull iop__iop_type__sp;
#define iop__iop_type__get(u, field)       IOP_UNION_GET(iop__iop_type, u, field)
typedef iop__iop_type__t iop__type__t;
typedef iop__iop_type__array_t iop__type__array_t;
#define iop__type__s  iop__iop_type__s

struct iop__package_elem__t {
    const iop_struct_t *nonnull __vptr;
    lstr_t   name;
};
EXPORT iop_struct_t const iop__package_elem__s;
EXPORT iop_struct_t const * const nonnull iop__package_elem__sp;
#define iop__package_elem__class_id  0

/*----- XXX private data, do not use directly -{{{-*/
typedef enum iop__value__tag_t {
    iop__value__i__ft = 1,
    iop__value__u__ft = 2,
    iop__value__d__ft = 3,
    iop__value__s__ft = 4,
    iop__value__b__ft = 5,
} iop__value__tag_t;
/*-}}}-*/
struct iop__value__t {
    iop__value__tag_t iop_tag;
    union {
        int64_t  i;
        uint64_t u;
        double   d;
        lstr_t   s;
        bool     b;
    };
};
EXPORT iop_struct_t const iop__value__s;
EXPORT iop_struct_t const * const nonnull iop__value__sp;
#define iop__value__get(u, field)       IOP_UNION_GET(iop__value, u, field)
struct iop__opt_info__t {
    struct iop__value__t *nullable def_val;
};
EXPORT iop_struct_t const iop__opt_info__s;
EXPORT iop_struct_t const * const nonnull iop__opt_info__sp;
struct iop__field__t {
    lstr_t   name;
    struct iop__iop_type__t type;
    struct iop__opt_info__t *nullable optional;
    opt_u16_t        tag;
    bool             is_reference;
};
EXPORT iop_struct_t const iop__field__s;
EXPORT iop_struct_t const * const nonnull iop__field__sp;
struct iop__structure__t {
    union {
        struct iop__package_elem__t super;
        struct {
            const iop_struct_t *nonnull __vptr;
            /* fields of iop__package_elem__t */
            lstr_t   name;
        };
    };
};
EXPORT iop_struct_t const iop__structure__s;
EXPORT iop_struct_t const * const nonnull iop__structure__sp;
#define iop__structure__class_id  1

struct iop__struct__t {
    union {
        struct iop__structure__t super;
        struct {
            struct {
                const iop_struct_t *nonnull __vptr;
                /* fields of iop__package_elem__t */
                lstr_t   name;
            };
            /* fields of iop__structure__t */
        };
    };
    iop__field__array_t fields;
};
EXPORT iop_struct_t const iop__struct__s;
EXPORT iop_struct_t const * const nonnull iop__struct__sp;
#define iop__struct__class_id  2

struct iop__union__t {
    union {
        struct iop__structure__t super;
        struct {
            struct {
                const iop_struct_t *nonnull __vptr;
                /* fields of iop__package_elem__t */
                lstr_t   name;
            };
            /* fields of iop__structure__t */
        };
    };
    iop__field__array_t fields;
};
EXPORT iop_struct_t const iop__union__s;
EXPORT iop_struct_t const * const nonnull iop__union__sp;
#define iop__union__class_id  4

struct iop__package__t {
    lstr_t   name;
    iop__package_elem__array_t elems;
};
EXPORT iop_struct_t const iop__package__s;
EXPORT iop_struct_t const * const nonnull iop__package__sp;
#if __has_feature(nullability)
#pragma GCC diagnostic pop
#endif

#endif
