/**************************************************************************/
/*                                                                        */
/*  Copyright (C) 2004-2016 INTERSEC SA                                   */
/*                                                                        */
/*  Should you receive a copy of this source code, you must check you     */
/*  have a proper, written authorization of INTERSEC to hold it. If you   */
/*  don't have such an authorization, you must DELETE all source code     */
/*  files in your possession, and inform INTERSEC of the fact you obtain  */
/*  these files. Should you not comply to these terms, you can be         */
/*  prosecuted in the extent permitted by applicable law.                 */
/*                                                                        */
/**************************************************************************/

#include "core.h"

/* {{{ Built-in comparison blocks */

const core_cmp_b(i8) core_i8_cmp = ^int (const int8_t *a, const int8_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u8) core_u8_cmp = ^int (const uint8_t *a, const uint8_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(i16) core_i16_cmp = ^int (const int16_t *a, const int16_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u16) core_u16_cmp = ^int (const uint16_t *a, const uint16_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(i32) core_i32_cmp = ^int (const int32_t *a, const int32_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u32) core_u32_cmp = ^int (const uint32_t *a, const uint32_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(i64) core_i64_cmp = ^int (const int64_t *a, const int64_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u64) core_u64_cmp = ^int (const uint64_t *a, const uint64_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(double) core_double_cmp = ^int (const double *a, const double *b)
{
    return CMP(*a, *b);
};
const core_cmp_b(lstr) core_lstr_cmp = ^int (const lstr_t *a, const lstr_t *b) {
    return lstr_cmp(*a, *b);
};
const core_cmp_b(str) core_str_cmp = ^int (char * const *a, char * const *b) {
    return strcmp(*a, *b);
};
const core_cmp_b(cstr) core_cstr_cmp = ^int (char const * const *a,
                                             char const * const *b) {
    return strcmp(*a, *b);
};

/* }}} */
